"use strict";(self.webpackChunkvip_go_nextjs_boilerplate=self.webpackChunkvip_go_nextjs_boilerplate||[]).push([[2415],{"./views/Scheduler/AppointmentDetails/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>Scheduler_AppointmentDetails});var toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),react=__webpack_require__("./node_modules/react/index.js"),format=__webpack_require__("./node_modules/date-fns/esm/format/index.js"),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),FormField=__webpack_require__("./components/FormField/index.tsx"),schedulerContent=__webpack_require__("./data/schedulerContent.ts"),useMedia=__webpack_require__("./hooks/useMedia.ts"),data=__webpack_require__("./views/Scheduler/data.ts"),addDays=__webpack_require__("./node_modules/date-fns/esm/addDays/index.js"),getNextValidDate=function getNextValidDate(args){var date=args.date,holidays=args.holidays,excludeSaturday=args.excludeSaturday,excludeSunday=args.excludeSunday;return function dateIsValid(args){var date=args.date,holidays=args.holidays,excludeSaturday=args.excludeSaturday,excludeSunday=args.excludeSunday,dayOfWeek=(0,format.Z)(date,"i");return!(excludeSaturday&&"6"===dayOfWeek||excludeSunday&&"7"===dayOfWeek||holidays.includes((0,format.Z)(date,"MM/dd")))}(args)?date:getNextValidDate({date:(0,addDays.Z)(date,1),holidays,excludeSaturday,excludeSunday})},generateDateOption=function generateDateOption(date){var weekDay=(0,format.Z)(date,"iii"),day=(0,format.Z)(date,"d"),valueDay=(0,format.Z)(date,"dd"),month=(0,format.Z)(date,"MMMM"),valueMonth=(0,format.Z)(date,"LL"),year=(0,format.Z)(date,"yyyy");return{value:"".concat(valueMonth,"/").concat(valueDay,"/").concat(year),label:"".concat(weekDay,", ").concat(month," ").concat(day),data:{testid:"scheduler-wizard-radio-scheduledate"}}},getAvailableDates=function getAvailableDates(args){for(var dates,today=args.today,_args$numberOfDates=args.numberOfDates,numberOfDates=void 0===_args$numberOfDates?7:_args$numberOfDates,_args$interval=args.interval,interval=void 0===_args$interval?3:_args$interval,_args$excludeSaturday=args.excludeSaturday,excludeSaturday=void 0!==_args$excludeSaturday&&_args$excludeSaturday,_args$excludeSunday=args.excludeSunday,excludeSunday=void 0===_args$excludeSunday||_args$excludeSunday,_args$holidays=args.holidays,holidays=void 0===_args$holidays?[]:_args$holidays,initialDate=getNextValidDate({date:(0,addDays.Z)(today,interval),excludeSaturday,excludeSunday,holidays}),i=0;i<numberOfDates;i++)if(dates){var nextDate=getNextValidDate({date:(0,addDays.Z)(dates[i-1],1),excludeSaturday,excludeSunday,holidays});dates.push(nextDate)}else dates=[initialDate];return dates.map(generateDateOption)},__jsx=react.createElement,weekDay=function weekDay(date){return(0,format.Z)(new Date(date),"iii")},formatMobileDate=function formatMobileDate(date){var arrayDate=date.split(",");return date=arrayDate[0]+",<br/>"+arrayDate[1]},cloneDeep=function cloneDeep(data){return JSON.parse(JSON.stringify(data))},AppointmentDetails=function AppointmentDetails(_ref){var country=_ref.country,holidays=_ref.holidays,_useFormikContext=(0,formik_esm.u6)(),values=_useFormikContext.values,setFieldValue=_useFormikContext.setFieldValue,_useState=(0,react.useState)(""),prevDate=_useState[0],setPrevDate=_useState[1],_useState2=(0,react.useState)(""),currDate=_useState2[0],setCurrDate=_useState2[1],_useState3=(0,react.useState)([]),appointmentFormNew=_useState3[0],setAppointmentFormNew=_useState3[1],checkMobile=(0,useMedia.G)(["(max-width: 1023px)"],[!0,!1],!1),availableDates=[],availableDatesCanada=[];return(0,react.useEffect)((function(){var _holidays$us,_holidays$ca;availableDates=getAvailableDates({today:new Date,holidays:null===(_holidays$us=holidays.us)||void 0===_holidays$us?void 0:_holidays$us.map((function(item){return item.date}))}),availableDatesCanada=getAvailableDates({today:new Date,holidays:null===(_holidays$ca=holidays.ca)||void 0===_holidays$ca?void 0:_holidays$ca.map((function(item){return item.date}))}),function createAppointment(country){setAppointmentFormNew([]),schedulerContent.I5.fields.map((function(field){if("ScheduleDate"!==field.name&&"ScheduleTime"!==field.name&&setAppointmentFormNew((function(appointmentFormNew){return[].concat((0,toConsumableArray.Z)(appointmentFormNew),[field])})),"ScheduleDate"===field.name){var newField=cloneDeep(field);newField.variant.options=[],"ca"===country?availableDatesCanada.map((function(value){var newValue=cloneDeep(value);newValue.label=checkMobile?formatMobileDate(value.label):value.label,newField.variant.options=[].concat((0,toConsumableArray.Z)(newField.variant.options),[newValue])})):availableDates.map((function(value){var newValue=cloneDeep(value);newValue.label=checkMobile?formatMobileDate(value.label):value.label,newField.variant.options=[].concat((0,toConsumableArray.Z)(newField.variant.options),[newValue])})),setAppointmentFormNew((function(appointmentFormNew){return[].concat((0,toConsumableArray.Z)(appointmentFormNew),[newField])}))}if("ScheduleTime"===field.name){var scheduleDate=values.ScheduleDate;if(""!==scheduleDate){var _newField=cloneDeep(field);_newField.variant.options=[],field.variant.options.map((function(value){value.availableDays.indexOf(weekDay(scheduleDate))>=0&&(_newField.variant.options=[].concat((0,toConsumableArray.Z)(_newField.variant.options),[value]))})),setAppointmentFormNew((function(appointmentFormNew){return[].concat((0,toConsumableArray.Z)(appointmentFormNew),[_newField])}))}else setAppointmentFormNew((function(appointmentFormNew){return[].concat((0,toConsumableArray.Z)(appointmentFormNew),[field])}))}}))}(country)}),[country]),(0,react.useEffect)((function(){setPrevDate(currDate),setCurrDate(values.ScheduleDate)}),[values]),(0,react.useEffect)((function(){values.ScheduleDate&&currDate!==prevDate&&!function verifyHour(date,hour){return data.u.filter((function(value){return value.value===hour&&value.availableDays.indexOf(weekDay(date))>=0})).length>0}(values.ScheduleDate,values.ScheduleTime)&&setFieldValue("ScheduleTime","")}),[currDate]),__jsx(react.Fragment,null,null==appointmentFormNew?void 0:appointmentFormNew.map((function(field){return __jsx(react.Fragment,null,__jsx(FormField.Z,{key:field.name,data:field,id:"personal-info"+field.name,variation:field.variant,border:!0}),__jsx("div",{className:"mb-3"}))})),__jsx("div",{className:"mb-4 lg:mb-10"}))};const Scheduler_AppointmentDetails=AppointmentDetails;try{AppointmentDetails.displayName="AppointmentDetails",AppointmentDetails.__docgenInfo={description:"",displayName:"AppointmentDetails",props:{country:{defaultValue:null,description:"",name:"country",required:!0,type:{name:"enum",value:[{value:'"us"'},{value:'"ca"'}]}},holidays:{defaultValue:null,description:"",name:"holidays",required:!0,type:{name:"THolidays"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["views/Scheduler/AppointmentDetails/index.tsx#AppointmentDetails"]={docgenInfo:AppointmentDetails.__docgenInfo,name:"AppointmentDetails",path:"views/Scheduler/AppointmentDetails/index.tsx#AppointmentDetails"})}catch(__react_docgen_typescript_loader_error){}}}]);